// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/a/{hash}": {
            "get": {
                "description": "机器鉴权",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA ControlPlane"
                ],
                "summary": "MachineOauth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/access/client": {
            "get": {
                "description": "获取ZTA的client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "ClientList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            },
            "post": {
                "description": "新增ZTA的client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "AddClient",
                "parameters": [
                    {
                        "description": "新增ZTA的client",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mparam.AddClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/access/client/notify": {
            "post": {
                "description": "接收client订单状态改变的通知",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "NotifyClient",
                "parameters": [
                    {
                        "description": "接收client订单状态改变的通知",
                        "name": "NotifyClient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mparam.NotifyClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/access/resource": {
            "get": {
                "description": "获取ZTA的resource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "ResourceList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            },
            "post": {
                "description": "新增ZTA的resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "AddResource",
                "parameters": [
                    {
                        "description": "新增ZTA的resource",
                        "name": "Resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mparam.AddResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/access/resource/{uuid}": {
            "delete": {
                "description": "删除ZTA的resource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "DelResource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "主键ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/controlplane/machine/{machine_id}": {
            "get": {
                "description": "根据机器码获取客户端鉴权的url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA ControlPlane"
                ],
                "summary": "LoginUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "machine_id",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/machine/auth/poll": {
            "get": {
                "description": "机器鉴权",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA ControlPlane"
                ],
                "summary": "MachineLongPoll",
                "parameters": [
                    {
                        "type": "string",
                        "description": "轮询的主题",
                        "name": "category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "超时时间，单位：秒",
                        "name": "timeout",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/node": {
            "get": {
                "description": "获取全部节点",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA Node"
                ],
                "summary": "ListNode",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        },
        "/user/refresh": {
            "post": {
                "description": "用户刷新token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ZTA"
                ],
                "summary": "UserRefresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Res"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.Res": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "mparam.AddClient": {
            "type": "object",
            "required": [
                "duration",
                "name",
                "peer_id",
                "resource_cid"
            ],
            "properties": {
                "duration": {
                    "description": "Port        int    ` + "`" + `json:\"port\" form:\"port\" binding:\"required\"` + "`" + `         // 443",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "peer_id": {
                    "type": "string"
                },
                "resource_cid": {
                    "type": "string"
                }
            }
        },
        "mparam.AddResource": {
            "type": "object",
            "required": [
                "host",
                "name",
                "port"
            ],
            "properties": {
                "host": {
                    "description": "api.github.com,192.168.1.1/16",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "description": "80-443;3306;6379",
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "cidr",
                        "dns"
                    ]
                }
            }
        },
        "mparam.NotifyClient": {
            "type": "object",
            "required": [
                "uuid"
            ],
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "127.0.0.1:80",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "FullNode API",
	Description: "This is FullNode api list.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
