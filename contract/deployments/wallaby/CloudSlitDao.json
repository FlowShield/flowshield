{
  "address": "0x7D9208Aa55833A9F5641cD2d7477733D819435eC",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_fullnodeDepositAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_privoderDepositAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "bindWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "changeWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        }
      ],
      "name": "checkOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "duration",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "clientOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllOrderTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        }
      ],
      "name": "getOrdersInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "duration",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "used",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "withdraw",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "payAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "privoderAddress",
              "type": "address"
            }
          ],
          "internalType": "struct CloudSlitDao.Order",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "getPrivoderOrders",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "getWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "isDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "unbindWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "verifyWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAllOrderTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        }
      ],
      "name": "withdrawOrderTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdfa457bbb69b7d317236d6f6665ca34bfba7d971d33da34c52b6c6ba6a054864",
  "receipt": {
    "to": null,
    "from": "0x1623c4E373f80fa7B3d5E46c2F71bc50708bA5A9",
    "contractAddress": "0x7D9208Aa55833A9F5641cD2d7477733D819435eC",
    "transactionIndex": 0,
    "gasUsed": "70991164",
    "logsBloom": "0x00",
    "blockHash": "0x865e00f10db76726c73b6b56f19a69f0a798663eeaf5186133e366bfaebf32a3",
    "transactionHash": "0xdfa457bbb69b7d317236d6f6665ca34bfba7d971d33da34c52b6c6ba6a054864",
    "logs": [],
    "blockNumber": 39022,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "8346b6c2d56704536002f0f413cc73d8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_fullnodeDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_privoderDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"bindWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"}],\"name\":\"checkOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"clientOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllOrderTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"}],\"name\":\"getOrdersInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"used\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdraw\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"payAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"privoderAddress\",\"type\":\"address\"}],\"internalType\":\"struct CloudSlitDao.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getPrivoderOrders\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"getWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"isDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"unbindWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"verifyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllOrderTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"}],\"name\":\"withdrawOrderTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CloudSlitDao.sol\":\"CloudSlitDao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CloudSlitDao.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./Erc20.sol\\\";\\n\\ncontract CloudSlitDao is ERC20 {\\n\\n    struct userWallet {\\n        address user;\\n        uint8 status;\\n    }\\n\\n    struct Order {\\n        string name;\\n        uint startTime;\\n        uint endTime;\\n        uint withdrawDuration;\\n        uint32 duration;\\n        uint price;\\n        bool used;\\n        bool withdraw;\\n        address payAddress;\\n        address privoderAddress;\\n    }\\n\\n    mapping(string => userWallet) userWallets;\\n\\n    //Initialize variables\\n    uint256 public _fullnodeDepositAmount;\\n    uint256 public _privoderDepositAmount;\\n    uint32 _durationUnit;\\n    // // A mapping is a key/value map. Here we store each staked user.\\n    mapping(address => uint256) _fullnodeDeposits;\\n    mapping(address => uint256) _privoderDeposits;\\n\\n    mapping(string=>Order) _orders;\\n    mapping(address=>string[]) _privoderOrders;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _mint(msg.sender, 100000000 * 10 ** decimals);\\n\\n        _fullnodeDepositAmount = 5000 * 10 ** decimals;\\n        _privoderDepositAmount = 1000 * 10 ** decimals;\\n        _durationUnit = 1 hours;\\n    }\\n\\n\\n    function getWallet(string memory uuid) external view returns(address, uint8){\\n        return (userWallets[uuid].user, userWallets[uuid].status);\\n    }\\n\\n    function bindWallet(string memory uuid) external {\\n        require(userWallets[uuid].user == address(0));\\n        if (_fullnodeDeposits[msg.sender] == 0) {\\n            userWallets[uuid] = userWallet(msg.sender, 1);\\n        }else{\\n            userWallets[uuid] = userWallet(msg.sender, 2);\\n        }\\n    }\\n\\n    function unbindWallet(string memory uuid) external {\\n        require(userWallets[uuid].user == msg.sender);\\n        delete userWallets[uuid];\\n    }\\n\\n    function verifyWallet(string memory uuid) external {\\n        require(_fullnodeDeposits[msg.sender] > 0);\\n        require(userWallets[uuid].status == 1);\\n        userWallets[uuid].status = 2;\\n    }\\n\\n    function changeWallet(string memory uuid, address newWallet) external {\\n        require(newWallet != address(0));\\n        if (userWallets[uuid].status == 1){\\n            userWallets[uuid].user = newWallet;\\n        }else{\\n            require(userWallets[uuid].user == msg.sender);\\n            userWallets[uuid].user = newWallet;\\n        }\\n    }\\n\\n    function getUserInfo(string memory uuid) external view returns(bool, bool){\\n        if(userWallets[uuid].status == 2){\\n            return ((_fullnodeDeposits[userWallets[uuid].user] > 0), (_privoderDeposits[userWallets[uuid].user] > 0));\\n        }else{\\n            return (false, false);\\n        }\\n    }\\n    // /**\\n    //  *\\n    //  */\\n    function isDeposit(uint8 _type) external view returns (bool) {\\n        if(_type == 1){\\n            return _fullnodeDeposits[msg.sender] != 0;\\n        } else if(_type == 2){\\n            return _privoderDeposits[msg.sender] != 0;\\n        }\\n        return false;\\n    }\\n\\n    // /**\\n    //  *\\n    //  */\\n    function stake(uint8 _type) external {\\n        if(_type == 1){\\n            require(_fullnodeDeposits[msg.sender] == 0, \\\"Already staked\\\");\\n            require(balanceOf(msg.sender) >= _fullnodeDepositAmount, \\\"Not enough CSD\\\");\\n            _transfer(msg.sender, address(this), _fullnodeDepositAmount);\\n            _fullnodeDeposits[msg.sender] += _fullnodeDepositAmount;\\n        }else if(_type == 2){\\n            require(_privoderDeposits[msg.sender] == 0, \\\"Already staked\\\");\\n            require(balanceOf(msg.sender) >= _privoderDepositAmount, \\\"Not enough CSD\\\");\\n            _transfer(msg.sender, address(this), _privoderDepositAmount);\\n            _privoderDeposits[msg.sender] += _privoderDepositAmount;\\n        }\\n    }\\n    // /**\\n    //  *\\n    //  */\\n    function withdraw(uint8 _type) external {\\n        if(_type == 1){\\n            require(_fullnodeDeposits[msg.sender] > 0);\\n            _transfer(address(this), msg.sender, _fullnodeDeposits[msg.sender]);\\n            delete _fullnodeDeposits[msg.sender];\\n        }else if(_type == 2){\\n            require(_privoderDeposits[msg.sender] > 0);\\n            _transfer(address(this), msg.sender, _privoderDeposits[msg.sender]);\\n            delete _privoderDeposits[msg.sender];\\n        }\\n    }\\n\\n    function getOrdersInfo(string memory orderId) public view returns(Order memory){\\n        return (_orders[orderId]);\\n    }\\n\\n    function clientOrder(string memory name, uint32 duration, string memory orderId, uint256 price, address to) external {\\n        require(!_orders[orderId].used, \\\"Already paid\\\");\\n        require(balanceOf(msg.sender) >= price, \\\"Not enough CSD\\\");\\n        _transfer(msg.sender, address(this), price);\\n        _orders[orderId] = Order(name, block.timestamp, block.timestamp + duration * _durationUnit, 0, duration, price, true, false, msg.sender , to);\\n        _privoderOrders[to].push(orderId);\\n    }\\n\\n    function checkOrder(string memory orderId) public view returns(bool) {\\n        return (_orders[orderId].used);\\n    }\\n\\n    function getPrivoderOrders(address from) public view returns(string[] memory ){\\n        return _privoderOrders[from];\\n    }\\n\\n    function getAllOrderTokens() external view returns(uint){\\n        if (_privoderDeposits[msg.sender] == 0){\\n            return 0;\\n        }\\n        string[] memory orders = _privoderOrders[msg.sender];\\n        uint price = 0;\\n        for (uint i=0; i < orders.length; i++){\\n            if (!_orders[orders[i]].withdraw){\\n                if(block.timestamp >= _orders[orders[i]].endTime){\\n                    uint duration = _orders[orders[i]].duration  - _orders[orders[i]].withdrawDuration;\\n                    price += (_orders[orders[i]].price / _orders[orders[i]].duration) * duration;\\n                }else{\\n                    uint duration = (block.timestamp - _orders[orders[i]].startTime) / _durationUnit  - _orders[orders[i]].withdrawDuration;\\n                    price += (_orders[orders[i]].price / _orders[orders[i]].duration) * duration;\\n                }\\n            }\\n        }\\n        return (price);\\n    }\\n\\n    function withdrawAllOrderTokens() external {\\n        require(_privoderDeposits[msg.sender] != 0, 'Not deposits');\\n        string[] memory orders = _privoderOrders[msg.sender];\\n        uint price = 0;\\n        for (uint i=0; i < orders.length; i++){\\n            if (!_orders[orders[i]].withdraw){\\n                if(block.timestamp >= _orders[orders[i]].endTime){\\n                    _orders[orders[i]].withdraw = true;\\n                    uint duration = _orders[orders[i]].duration  - _orders[orders[i]].withdrawDuration;\\n                    price += (_orders[orders[i]].price / _orders[orders[i]].duration) * duration;\\n                }else{\\n                    uint duration = (block.timestamp - _orders[orders[i]].startTime) / _durationUnit  - _orders[orders[i]].withdrawDuration;\\n                    _orders[orders[i]].withdrawDuration += duration;\\n                    price += (_orders[orders[i]].price / _orders[orders[i]].duration) * duration;\\n                }\\n            }\\n        }\\n        _transfer(address(this), msg.sender, price);\\n    }\\n\\n    function withdrawOrderTokens(string memory orderId) external {\\n        require(!_orders[orderId].withdraw, 'The order has been withdrawn');\\n        require(_orders[orderId].privoderAddress == msg.sender, 'Please confirm the wallet address, Can not withdraw');\\n        if(block.timestamp >= _orders[orderId].endTime){\\n            _orders[orderId].withdraw = true;\\n            uint duration = _orders[orderId].duration  - _orders[orderId].withdrawDuration;\\n            uint price = (_orders[orderId].price / _orders[orderId].duration) * duration;\\n            _transfer(address(this), msg.sender, price);\\n        }else{\\n            uint duration = (block.timestamp - _orders[orderId].startTime) / _durationUnit  - _orders[orderId].withdrawDuration;\\n            _orders[orderId].withdrawDuration += duration;\\n            uint price = (_orders[orderId].price / _orders[orderId].duration) * duration;\\n            _transfer(address(this), msg.sender, price);\\n        }\\n    }\\n}\",\"keccak256\":\"0x9d6d00653ec6e8fdd7cc210973cec09f1ae06fbb339f5d00e6c8f39c70d4e752\",\"license\":\"MIT\"},\"contracts/Erc20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\n// This is the main building block for smart contracts.\\ncontract ERC20 {\\n    string public name = \\\"CloudSlit Dao\\\";\\n    string public symbol = \\\"CSD\\\";\\n    uint256 public totalSupply;\\n    uint8 public decimals = 18;\\n\\n    mapping(address => uint256) private balances;\\n    mapping(address => mapping(address => uint256)) private allowances;\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        totalSupply += amount;\\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n        balances[account] += amount;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool){\\n        // Check if the transaction sender has enough tokens.\\n        // If `require`'s first argument evaluates to `false` then the\\n        // transaction will revert.\\n        require(balances[msg.sender] >= amount, \\\"Not enough tokens\\\");\\n\\n        // Transfer the amount.\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n    /**\\n         * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        uint256 fromBalance = balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        balances[from] = fromBalance - amount;\\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n        // decrementing then incrementing.\\n        balances[to] += amount;\\n    }\\n\\n    function approve(address spender, uint256 value) public returns (bool){\\n        allowances[msg.sender][spender] = value;\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view returns (uint256){\\n        return allowances[owner][spender];\\n    }\\n\\n    function balanceOf(address account) public view returns (uint256) {\\n        return balances[account];\\n    }\\n}\",\"keccak256\":\"0x4b682933811b00c1062d326903f2eb2846139f36368c970780e17dbb6097f86a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600d81526020017f436c6f7564536c69742044616f00000000000000000000000000000000000000815250600090816200004a9190620004ee565b506040518060400160405280600381526020017f435344000000000000000000000000000000000000000000000000000000000081525060019081620000919190620004ee565b506012600360006101000a81548160ff021916908360ff160217905550348015620000bb57600080fd5b50620000fc33600360009054906101000a900460ff16600a620000df919062000765565b6305f5e100620000f09190620007b6565b6200018b60201b60201c565b600360009054906101000a900460ff16600a6200011a919062000765565b611388620001299190620007b6565b600781905550600360009054906101000a900460ff16600a6200014d919062000765565b6103e86200015c9190620007b6565b600881905550610e10600960006101000a81548163ffffffff021916908363ffffffff160217905550620008bf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f49062000862565b60405180910390fd5b806002600082825462000211919062000884565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000269919062000884565b925050819055505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f657607f821691505b6020821081036200030c576200030b620002ae565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000337565b62000382868362000337565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003cf620003c9620003c3846200039a565b620003a4565b6200039a565b9050919050565b6000819050919050565b620003eb83620003ae565b62000403620003fa82620003d6565b84845462000344565b825550505050565b600090565b6200041a6200040b565b62000427818484620003e0565b505050565b5b818110156200044f576200044360008262000410565b6001810190506200042d565b5050565b601f8211156200049e57620004688162000312565b620004738462000327565b8101602085101562000483578190505b6200049b620004928562000327565b8301826200042c565b50505b505050565b600082821c905092915050565b6000620004c360001984600802620004a3565b1980831691505092915050565b6000620004de8383620004b0565b9150826002028217905092915050565b620004f98262000274565b67ffffffffffffffff8111156200051557620005146200027f565b5b620005218254620002dd565b6200052e82828562000453565b600060209050601f83116001811462000566576000841562000551578287015190505b6200055d8582620004d0565b865550620005cd565b601f198416620005768662000312565b60005b82811015620005a05784890151825560018201915060208501945060208101905062000579565b86831015620005c05784890151620005bc601f891682620004b0565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000663578086048111156200063b576200063a620005d5565b5b60018516156200064b5780820291505b80810290506200065b8562000604565b94506200061b565b94509492505050565b6000826200067e576001905062000751565b816200068e576000905062000751565b8160018114620006a75760028114620006b257620006e8565b600191505062000751565b60ff841115620006c757620006c6620005d5565b5b8360020a915084821115620006e157620006e0620005d5565b5b5062000751565b5060208310610133831016604e8410600b8410161715620007225782820a9050838111156200071c576200071b620005d5565b5b62000751565b62000731848484600162000611565b925090508184048111156200074b576200074a620005d5565b5b81810290505b9392505050565b600060ff82169050919050565b600062000772826200039a565b91506200077f8362000758565b9250620007ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200066c565b905092915050565b6000620007c3826200039a565b9150620007d0836200039a565b9250828202620007e0816200039a565b91508282048414831517620007fa57620007f9620005d5565b5b5092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006200084a601f8362000801565b9150620008578262000812565b602082019050919050565b600060208201905081810360008301526200087d816200083b565b9050919050565b600062000891826200039a565b91506200089e836200039a565b9250828201905080821115620008b957620008b8620005d5565b5b92915050565b613ee280620008cf6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638ec012b9116100de578063c6ab5d9011610097578063dd6887ed11610071578063dd6887ed14610497578063f276b8aa146104c7578063f3fbfc7b146104f7578063ffc2c9b7146105155761018e565b8063c6ab5d901461042f578063d19e48561461044b578063dd62ed3e146104675761018e565b80638ec012b91461035857806395d89b4114610374578063a23c7c1414610392578063a4e2df66146103b0578063a9059cbb146103e1578063c5bc91e8146104115761018e565b8063313ce5671161014b57806370a082311161012557806370a08231146102ab5780637c9b7fdd146102db5780638291a0211461030c57806387a858d21461033c5761018e565b8063313ce567146102555780635c9abe1114610273578063604f21771461028f5761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e1578063183dd1cd146101ff57806325cfedb51461022f57806327a0b34a1461024b575b600080fd5b61019b610531565b6040516101a89190612cc7565b60405180910390f35b6101cb60048036038101906101c69190612d91565b6105bf565b6040516101d89190612dec565b60405180910390f35b6101e961064c565b6040516101f69190612e16565b60405180910390f35b61021960048036038101906102149190612e31565b610652565b6040516102269190612f6a565b60405180910390f35b610249600480360381019061024491906130c1565b61076a565b005b610253610b13565b005b61025d6110c6565b60405161026a9190613126565b60405180910390f35b61028d6004803603810190610288919061317d565b6110d9565b005b6102a960048036038101906102a4919061325c565b61141a565b005b6102c560048036038101906102c09190612e31565b6116a2565b6040516102d29190612e16565b60405180910390f35b6102f560048036038101906102f091906130c1565b6116eb565b604051610303929190613289565b60405180910390f35b610326600480360381019061032191906130c1565b611845565b60405161033391906133c8565b60405180910390f35b610356600480360381019061035191906133ea565b611a40565b005b610372600480360381019061036d91906130c1565b611bf5565b005b61037c611e2f565b6040516103899190612cc7565b60405180910390f35b61039a611ebd565b6040516103a79190612e16565b60405180910390f35b6103ca60048036038101906103c591906130c1565b611ec3565b6040516103d8929190613455565b60405180910390f35b6103fb60048036038101906103f69190612d91565b611f40565b6040516104089190612dec565b60405180910390f35b610419611fd9565b6040516104269190612e16565b60405180910390f35b6104496004803603810190610444919061325c565b611fdf565b005b610465600480360381019061046091906130c1565b6121b1565b005b610481600480360381019061047c919061347e565b612289565b60405161048e9190612e16565b60405180910390f35b6104b160048036038101906104ac91906130c1565b612310565b6040516104be9190612dec565b60405180910390f35b6104e160048036038101906104dc919061325c565b612348565b6040516104ee9190612dec565b60405180910390f35b6104ff612400565b60405161050c9190612e16565b60405180910390f35b61052f600480360381019061052a91906130c1565b6128d6565b005b6000805461053e906134ed565b80601f016020809104026020016040519081016040528092919081815260200182805461056a906134ed565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60025481565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561075f5783829060005260206000200180546106d2906134ed565b80601f01602080910402602001604051908101604052809291908181526020018280546106fe906134ed565b801561074b5780601f106107205761010080835404028352916020019161074b565b820191906000526020600020905b81548152906001019060200180831161072e57829003601f168201915b5050505050815260200190600101906106b3565b505050509050919050565b600c8160405161077a919061355a565b908152602001604051809103902060060160019054906101000a900460ff16156107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d0906135bd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600c82604051610800919061355a565b908152602001604051809103902060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f9061364f565b60405180910390fd5b600c81604051610898919061355a565b90815260200160405180910390206002015442106109d7576001600c826040516108c2919061355a565b908152602001604051809103902060060160016101000a81548160ff0219169083151502179055506000600c826040516108fc919061355a565b908152602001604051809103902060030154600c8360405161091e919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16610950919061369e565b9050600081600c84604051610965919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c8560405161099d919061355a565b9081526020016040518091039020600501546109b99190613701565b6109c39190613732565b90506109d030338361299e565b5050610b10565b6000600c826040516109e9919061355a565b908152602001604051809103902060030154600960009054906101000a900463ffffffff1663ffffffff16600c84604051610a24919061355a565b90815260200160405180910390206001015442610a41919061369e565b610a4b9190613701565b610a55919061369e565b905080600c83604051610a68919061355a565b90815260200160405180910390206003016000828254610a889190613774565b92505081905550600081600c84604051610aa2919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c85604051610ada919061355a565b908152602001604051809103902060050154610af69190613701565b610b009190613732565b9050610b0d30338361299e565b50505b50565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c906137f4565b60405180910390fd5b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ca2578382906000526020600020018054610c15906134ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610c41906134ed565b8015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b505050505081526020019060010190610bf6565b5050505090506000805b82518110156110b657600c838281518110610cca57610cc9613814565b5b6020026020010151604051610cdf919061355a565b908152602001604051809103902060060160019054906101000a900460ff166110a357600c838281518110610d1757610d16613814565b5b6020026020010151604051610d2c919061355a565b9081526020016040518091039020600201544210610eea576001600c848381518110610d5b57610d5a613814565b5b6020026020010151604051610d70919061355a565b908152602001604051809103902060060160016101000a81548160ff0219169083151502179055506000600c848381518110610daf57610dae613814565b5b6020026020010151604051610dc4919061355a565b908152602001604051809103902060030154600c858481518110610deb57610dea613814565b5b6020026020010151604051610e00919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16610e32919061369e565b905080600c858481518110610e4a57610e49613814565b5b6020026020010151604051610e5f919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c868581518110610e9c57610e9b613814565b5b6020026020010151604051610eb1919061355a565b908152602001604051809103902060050154610ecd9190613701565b610ed79190613732565b83610ee29190613774565b9250506110a2565b6000600c848381518110610f0157610f00613814565b5b6020026020010151604051610f16919061355a565b908152602001604051809103902060030154600960009054906101000a900463ffffffff1663ffffffff16600c868581518110610f5657610f55613814565b5b6020026020010151604051610f6b919061355a565b90815260200160405180910390206001015442610f88919061369e565b610f929190613701565b610f9c919061369e565b905080600c858481518110610fb457610fb3613814565b5b6020026020010151604051610fc9919061355a565b90815260200160405180910390206003016000828254610fe99190613774565b9250508190555080600c85848151811061100657611005613814565b5b602002602001015160405161101b919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c86858151811061105857611057613814565b5b602002602001015160405161106d919061355a565b9081526020016040518091039020600501546110899190613701565b6110939190613732565b8361109e9190613774565b9250505b5b80806110ae90613843565b915050610cac565b506110c230338361299e565b5050565b600360009054906101000a900460ff1681565b600c836040516110e9919061355a565b908152602001604051809103902060060160009054906101000a900460ff1615611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f906138d7565b60405180910390fd5b81611152336116a2565b1015611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a90613943565b60405180910390fd5b61119e33308461299e565b604051806101400160405280868152602001428152602001600960009054906101000a900463ffffffff16866111d49190613963565b63ffffffff16426111e59190613774565b8152602001600081526020018563ffffffff1681526020018381526020016001151581526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815250600c8460405161125b919061355a565b9081526020016040518091039020600082015181600001908161127e9190613b4c565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff0219169083151502179055506101008201518160060160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600d60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915090816114129190613b4c565b505050505050565b60018160ff160361155e576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149e90613c6a565b60405180910390fd5b6007546114b3336116a2565b10156114f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114eb90613943565b60405180910390fd5b611501333060075461299e565b600754600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115529190613774565b9250508190555061169f565b60028160ff160361169e576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146115eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e290613c6a565b60405180910390fd5b6008546115f7336116a2565b1015611638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162f90613943565b60405180910390fd5b611645333060085461299e565b600854600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116969190613774565b925050819055505b5b50565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806002600684604051611700919061355a565b908152602001604051809103902060000160149054906101000a900460ff1660ff1603611838576000600a600060068660405161173d919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116000600b60006006876040516117c1919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541191509150611840565b600080915091505b915091565b61184d612bae565b600c8260405161185d919061355a565b908152602001604051809103902060405180610140016040529081600082018054611887906134ed565b80601f01602080910402602001604051908101604052809291908181526020018280546118b3906134ed565b80156119005780601f106118d557610100808354040283529160200191611900565b820191906000526020600020905b8154815290600101906020018083116118e357829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581526020016006820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a7957600080fd5b6001600683604051611a8b919061355a565b908152602001604051809103902060000160149054906101000a900460ff1660ff1603611b175780600683604051611ac3919061355a565b908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bf1565b3373ffffffffffffffffffffffffffffffffffffffff16600683604051611b3e919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b9057600080fd5b80600683604051611ba1919061355a565b908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff16600682604051611c1d919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c6f57600080fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611d735760405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600160ff16815250600682604051611cf5919061355a565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff160217905550905050611e2c565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600260ff16815250600682604051611db2919061355a565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff1602179055509050505b50565b60018054611e3c906134ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611e68906134ed565b8015611eb55780601f10611e8a57610100808354040283529160200191611eb5565b820191906000526020600020905b815481529060010190602001808311611e9857829003601f168201915b505050505081565b60075481565b600080600683604051611ed6919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600684604051611f18919061355a565b908152602001604051809103902060000160149054906101000a900460ff1691509150915091565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbb90613cd6565b60405180910390fd5b611fcf33848461299e565b6001905092915050565b60085481565b60018160ff16036120c8576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161203657600080fd5b6120803033600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299e565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556121ae565b60028160ff16036121ad576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161211f57600080fd5b6121693033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299e565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555b5b50565b3373ffffffffffffffffffffffffffffffffffffffff166006826040516121d8919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461222a57600080fd5b60068160405161223a919061355a565b9081526020016040518091039020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600c82604051612322919061355a565b908152602001604051809103902060060160009054906101000a900460ff169050919050565b600060018260ff16036123a0576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141590506123fb565b60028260ff16036123f6576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141590506123fb565b600090505b919050565b600080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361245157600090506128d3565b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561255e5783829060005260206000200180546124d1906134ed565b80601f01602080910402602001604051908101604052809291908181526020018280546124fd906134ed565b801561254a5780601f1061251f5761010080835404028352916020019161254a565b820191906000526020600020905b81548152906001019060200180831161252d57829003601f168201915b5050505050815260200190600101906124b2565b5050505090506000805b82518110156128cc57600c83828151811061258657612585613814565b5b602002602001015160405161259b919061355a565b908152602001604051809103902060060160019054906101000a900460ff166128b957600c8382815181106125d3576125d2613814565b5b60200260200101516040516125e8919061355a565b9081526020016040518091039020600201544210612752576000600c84838151811061261757612616613814565b5b602002602001015160405161262c919061355a565b908152602001604051809103902060030154600c85848151811061265357612652613814565b5b6020026020010151604051612668919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff1661269a919061369e565b905080600c8584815181106126b2576126b1613814565b5b60200260200101516040516126c7919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c86858151811061270457612703613814565b5b6020026020010151604051612719919061355a565b9081526020016040518091039020600501546127359190613701565b61273f9190613732565b8361274a9190613774565b9250506128b8565b6000600c84838151811061276957612768613814565b5b602002602001015160405161277e919061355a565b908152602001604051809103902060030154600960009054906101000a900463ffffffff1663ffffffff16600c8685815181106127be576127bd613814565b5b60200260200101516040516127d3919061355a565b908152602001604051809103902060010154426127f0919061369e565b6127fa9190613701565b612804919061369e565b905080600c85848151811061281c5761281b613814565b5b6020026020010151604051612831919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c86858151811061286e5761286d613814565b5b6020026020010151604051612883919061355a565b90815260200160405180910390206005015461289f9190613701565b6128a99190613732565b836128b49190613774565b9250505b5b80806128c490613843565b915050612568565b5080925050505b90565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161292257600080fd5b6001600682604051612934919061355a565b908152602001604051809103902060000160149054906101000a900460ff1660ff161461296057600080fd5b6002600682604051612972919061355a565b908152602001604051809103902060000160146101000a81548160ff021916908360ff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0490613d68565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a7390613dfa565b60405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612afa90613e8c565b60405180910390fd5b8181612b0f919061369e565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612ba19190613774565b9250508190555050505050565b60405180610140016040528060608152602001600081526020016000815260200160008152602001600063ffffffff16815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c71578082015181840152602081019050612c56565b60008484015250505050565b6000601f19601f8301169050919050565b6000612c9982612c37565b612ca38185612c42565b9350612cb3818560208601612c53565b612cbc81612c7d565b840191505092915050565b60006020820190508181036000830152612ce18184612c8e565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d2882612cfd565b9050919050565b612d3881612d1d565b8114612d4357600080fd5b50565b600081359050612d5581612d2f565b92915050565b6000819050919050565b612d6e81612d5b565b8114612d7957600080fd5b50565b600081359050612d8b81612d65565b92915050565b60008060408385031215612da857612da7612cf3565b5b6000612db685828601612d46565b9250506020612dc785828601612d7c565b9150509250929050565b60008115159050919050565b612de681612dd1565b82525050565b6000602082019050612e016000830184612ddd565b92915050565b612e1081612d5b565b82525050565b6000602082019050612e2b6000830184612e07565b92915050565b600060208284031215612e4757612e46612cf3565b5b6000612e5584828501612d46565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612ea682612c37565b612eb08185612e8a565b9350612ec0818560208601612c53565b612ec981612c7d565b840191505092915050565b6000612ee08383612e9b565b905092915050565b6000602082019050919050565b6000612f0082612e5e565b612f0a8185612e69565b935083602082028501612f1c85612e7a565b8060005b85811015612f585784840389528151612f398582612ed4565b9450612f4483612ee8565b925060208a01995050600181019050612f20565b50829750879550505050505092915050565b60006020820190508181036000830152612f848184612ef5565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612fce82612c7d565b810181811067ffffffffffffffff82111715612fed57612fec612f96565b5b80604052505050565b6000613000612ce9565b905061300c8282612fc5565b919050565b600067ffffffffffffffff82111561302c5761302b612f96565b5b61303582612c7d565b9050602081019050919050565b82818337600083830152505050565b600061306461305f84613011565b612ff6565b9050828152602081018484840111156130805761307f612f91565b5b61308b848285613042565b509392505050565b600082601f8301126130a8576130a7612f8c565b5b81356130b8848260208601613051565b91505092915050565b6000602082840312156130d7576130d6612cf3565b5b600082013567ffffffffffffffff8111156130f5576130f4612cf8565b5b61310184828501613093565b91505092915050565b600060ff82169050919050565b6131208161310a565b82525050565b600060208201905061313b6000830184613117565b92915050565b600063ffffffff82169050919050565b61315a81613141565b811461316557600080fd5b50565b60008135905061317781613151565b92915050565b600080600080600060a0868803121561319957613198612cf3565b5b600086013567ffffffffffffffff8111156131b7576131b6612cf8565b5b6131c388828901613093565b95505060206131d488828901613168565b945050604086013567ffffffffffffffff8111156131f5576131f4612cf8565b5b61320188828901613093565b935050606061321288828901612d7c565b925050608061322388828901612d46565b9150509295509295909350565b6132398161310a565b811461324457600080fd5b50565b60008135905061325681613230565b92915050565b60006020828403121561327257613271612cf3565b5b600061328084828501613247565b91505092915050565b600060408201905061329e6000830185612ddd565b6132ab6020830184612ddd565b9392505050565b6132bb81612d5b565b82525050565b6132ca81613141565b82525050565b6132d981612dd1565b82525050565b6132e881612d1d565b82525050565b600061014083016000830151848203600086015261330c8282612e9b565b915050602083015161332160208601826132b2565b50604083015161333460408601826132b2565b50606083015161334760608601826132b2565b50608083015161335a60808601826132c1565b5060a083015161336d60a08601826132b2565b5060c083015161338060c08601826132d0565b5060e083015161339360e08601826132d0565b506101008301516133a86101008601826132df565b506101208301516133bd6101208601826132df565b508091505092915050565b600060208201905081810360008301526133e281846132ee565b905092915050565b6000806040838503121561340157613400612cf3565b5b600083013567ffffffffffffffff81111561341f5761341e612cf8565b5b61342b85828601613093565b925050602061343c85828601612d46565b9150509250929050565b61344f81612d1d565b82525050565b600060408201905061346a6000830185613446565b6134776020830184613117565b9392505050565b6000806040838503121561349557613494612cf3565b5b60006134a385828601612d46565b92505060206134b485828601612d46565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061350557607f821691505b602082108103613518576135176134be565b5b50919050565b600081905092915050565b600061353482612c37565b61353e818561351e565b935061354e818560208601612c53565b80840191505092915050565b60006135668284613529565b915081905092915050565b7f546865206f7264657220686173206265656e2077697468647261776e00000000600082015250565b60006135a7601c83612c42565b91506135b282613571565b602082019050919050565b600060208201905081810360008301526135d68161359a565b9050919050565b7f506c6561736520636f6e6669726d207468652077616c6c65742061646472657360008201527f732c2043616e206e6f7420776974686472617700000000000000000000000000602082015250565b6000613639603383612c42565b9150613644826135dd565b604082019050919050565b600060208201905081810360008301526136688161362c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006136a982612d5b565b91506136b483612d5b565b92508282039050818111156136cc576136cb61366f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061370c82612d5b565b915061371783612d5b565b925082613727576137266136d2565b5b828204905092915050565b600061373d82612d5b565b915061374883612d5b565b925082820261375681612d5b565b9150828204841483151761376d5761376c61366f565b5b5092915050565b600061377f82612d5b565b915061378a83612d5b565b92508282019050808211156137a2576137a161366f565b5b92915050565b7f4e6f74206465706f736974730000000000000000000000000000000000000000600082015250565b60006137de600c83612c42565b91506137e9826137a8565b602082019050919050565b6000602082019050818103600083015261380d816137d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061384e82612d5b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138805761387f61366f565b5b600182019050919050565b7f416c726561647920706169640000000000000000000000000000000000000000600082015250565b60006138c1600c83612c42565b91506138cc8261388b565b602082019050919050565b600060208201905081810360008301526138f0816138b4565b9050919050565b7f4e6f7420656e6f75676820435344000000000000000000000000000000000000600082015250565b600061392d600e83612c42565b9150613938826138f7565b602082019050919050565b6000602082019050818103600083015261395c81613920565b9050919050565b600061396e82613141565b915061397983613141565b925082820261398781613141565b91508082146139995761399861366f565b5b5092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613a027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826139c5565b613a0c86836139c5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613a49613a44613a3f84612d5b565b613a24565b612d5b565b9050919050565b6000819050919050565b613a6383613a2e565b613a77613a6f82613a50565b8484546139d2565b825550505050565b600090565b613a8c613a7f565b613a97818484613a5a565b505050565b5b81811015613abb57613ab0600082613a84565b600181019050613a9d565b5050565b601f821115613b0057613ad1816139a0565b613ada846139b5565b81016020851015613ae9578190505b613afd613af5856139b5565b830182613a9c565b50505b505050565b600082821c905092915050565b6000613b2360001984600802613b05565b1980831691505092915050565b6000613b3c8383613b12565b9150826002028217905092915050565b613b5582612c37565b67ffffffffffffffff811115613b6e57613b6d612f96565b5b613b7882546134ed565b613b83828285613abf565b600060209050601f831160018114613bb65760008415613ba4578287015190505b613bae8582613b30565b865550613c16565b601f198416613bc4866139a0565b60005b82811015613bec57848901518255600182019150602085019450602081019050613bc7565b86831015613c095784890151613c05601f891682613b12565b8355505b6001600288020188555050505b505050505050565b7f416c7265616479207374616b6564000000000000000000000000000000000000600082015250565b6000613c54600e83612c42565b9150613c5f82613c1e565b602082019050919050565b60006020820190508181036000830152613c8381613c47565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000613cc0601183612c42565b9150613ccb82613c8a565b602082019050919050565b60006020820190508181036000830152613cef81613cb3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613d52602583612c42565b9150613d5d82613cf6565b604082019050919050565b60006020820190508181036000830152613d8181613d45565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613de4602383612c42565b9150613def82613d88565b604082019050919050565b60006020820190508181036000830152613e1381613dd7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613e76602683612c42565b9150613e8182613e1a565b604082019050919050565b60006020820190508181036000830152613ea581613e69565b905091905056fea2646970667358221220d44d5a033a1dcef4178bef743ecb289ceb3c0f573f06e312c5cf0a4eb95b08f264736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80638ec012b9116100de578063c6ab5d9011610097578063dd6887ed11610071578063dd6887ed14610497578063f276b8aa146104c7578063f3fbfc7b146104f7578063ffc2c9b7146105155761018e565b8063c6ab5d901461042f578063d19e48561461044b578063dd62ed3e146104675761018e565b80638ec012b91461035857806395d89b4114610374578063a23c7c1414610392578063a4e2df66146103b0578063a9059cbb146103e1578063c5bc91e8146104115761018e565b8063313ce5671161014b57806370a082311161012557806370a08231146102ab5780637c9b7fdd146102db5780638291a0211461030c57806387a858d21461033c5761018e565b8063313ce567146102555780635c9abe1114610273578063604f21771461028f5761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e1578063183dd1cd146101ff57806325cfedb51461022f57806327a0b34a1461024b575b600080fd5b61019b610531565b6040516101a89190612cc7565b60405180910390f35b6101cb60048036038101906101c69190612d91565b6105bf565b6040516101d89190612dec565b60405180910390f35b6101e961064c565b6040516101f69190612e16565b60405180910390f35b61021960048036038101906102149190612e31565b610652565b6040516102269190612f6a565b60405180910390f35b610249600480360381019061024491906130c1565b61076a565b005b610253610b13565b005b61025d6110c6565b60405161026a9190613126565b60405180910390f35b61028d6004803603810190610288919061317d565b6110d9565b005b6102a960048036038101906102a4919061325c565b61141a565b005b6102c560048036038101906102c09190612e31565b6116a2565b6040516102d29190612e16565b60405180910390f35b6102f560048036038101906102f091906130c1565b6116eb565b604051610303929190613289565b60405180910390f35b610326600480360381019061032191906130c1565b611845565b60405161033391906133c8565b60405180910390f35b610356600480360381019061035191906133ea565b611a40565b005b610372600480360381019061036d91906130c1565b611bf5565b005b61037c611e2f565b6040516103899190612cc7565b60405180910390f35b61039a611ebd565b6040516103a79190612e16565b60405180910390f35b6103ca60048036038101906103c591906130c1565b611ec3565b6040516103d8929190613455565b60405180910390f35b6103fb60048036038101906103f69190612d91565b611f40565b6040516104089190612dec565b60405180910390f35b610419611fd9565b6040516104269190612e16565b60405180910390f35b6104496004803603810190610444919061325c565b611fdf565b005b610465600480360381019061046091906130c1565b6121b1565b005b610481600480360381019061047c919061347e565b612289565b60405161048e9190612e16565b60405180910390f35b6104b160048036038101906104ac91906130c1565b612310565b6040516104be9190612dec565b60405180910390f35b6104e160048036038101906104dc919061325c565b612348565b6040516104ee9190612dec565b60405180910390f35b6104ff612400565b60405161050c9190612e16565b60405180910390f35b61052f600480360381019061052a91906130c1565b6128d6565b005b6000805461053e906134ed565b80601f016020809104026020016040519081016040528092919081815260200182805461056a906134ed565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60025481565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561075f5783829060005260206000200180546106d2906134ed565b80601f01602080910402602001604051908101604052809291908181526020018280546106fe906134ed565b801561074b5780601f106107205761010080835404028352916020019161074b565b820191906000526020600020905b81548152906001019060200180831161072e57829003601f168201915b5050505050815260200190600101906106b3565b505050509050919050565b600c8160405161077a919061355a565b908152602001604051809103902060060160019054906101000a900460ff16156107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d0906135bd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600c82604051610800919061355a565b908152602001604051809103902060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f9061364f565b60405180910390fd5b600c81604051610898919061355a565b90815260200160405180910390206002015442106109d7576001600c826040516108c2919061355a565b908152602001604051809103902060060160016101000a81548160ff0219169083151502179055506000600c826040516108fc919061355a565b908152602001604051809103902060030154600c8360405161091e919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16610950919061369e565b9050600081600c84604051610965919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c8560405161099d919061355a565b9081526020016040518091039020600501546109b99190613701565b6109c39190613732565b90506109d030338361299e565b5050610b10565b6000600c826040516109e9919061355a565b908152602001604051809103902060030154600960009054906101000a900463ffffffff1663ffffffff16600c84604051610a24919061355a565b90815260200160405180910390206001015442610a41919061369e565b610a4b9190613701565b610a55919061369e565b905080600c83604051610a68919061355a565b90815260200160405180910390206003016000828254610a889190613774565b92505081905550600081600c84604051610aa2919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c85604051610ada919061355a565b908152602001604051809103902060050154610af69190613701565b610b009190613732565b9050610b0d30338361299e565b50505b50565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c906137f4565b60405180910390fd5b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ca2578382906000526020600020018054610c15906134ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610c41906134ed565b8015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b505050505081526020019060010190610bf6565b5050505090506000805b82518110156110b657600c838281518110610cca57610cc9613814565b5b6020026020010151604051610cdf919061355a565b908152602001604051809103902060060160019054906101000a900460ff166110a357600c838281518110610d1757610d16613814565b5b6020026020010151604051610d2c919061355a565b9081526020016040518091039020600201544210610eea576001600c848381518110610d5b57610d5a613814565b5b6020026020010151604051610d70919061355a565b908152602001604051809103902060060160016101000a81548160ff0219169083151502179055506000600c848381518110610daf57610dae613814565b5b6020026020010151604051610dc4919061355a565b908152602001604051809103902060030154600c858481518110610deb57610dea613814565b5b6020026020010151604051610e00919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16610e32919061369e565b905080600c858481518110610e4a57610e49613814565b5b6020026020010151604051610e5f919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c868581518110610e9c57610e9b613814565b5b6020026020010151604051610eb1919061355a565b908152602001604051809103902060050154610ecd9190613701565b610ed79190613732565b83610ee29190613774565b9250506110a2565b6000600c848381518110610f0157610f00613814565b5b6020026020010151604051610f16919061355a565b908152602001604051809103902060030154600960009054906101000a900463ffffffff1663ffffffff16600c868581518110610f5657610f55613814565b5b6020026020010151604051610f6b919061355a565b90815260200160405180910390206001015442610f88919061369e565b610f929190613701565b610f9c919061369e565b905080600c858481518110610fb457610fb3613814565b5b6020026020010151604051610fc9919061355a565b90815260200160405180910390206003016000828254610fe99190613774565b9250508190555080600c85848151811061100657611005613814565b5b602002602001015160405161101b919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c86858151811061105857611057613814565b5b602002602001015160405161106d919061355a565b9081526020016040518091039020600501546110899190613701565b6110939190613732565b8361109e9190613774565b9250505b5b80806110ae90613843565b915050610cac565b506110c230338361299e565b5050565b600360009054906101000a900460ff1681565b600c836040516110e9919061355a565b908152602001604051809103902060060160009054906101000a900460ff1615611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f906138d7565b60405180910390fd5b81611152336116a2565b1015611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a90613943565b60405180910390fd5b61119e33308461299e565b604051806101400160405280868152602001428152602001600960009054906101000a900463ffffffff16866111d49190613963565b63ffffffff16426111e59190613774565b8152602001600081526020018563ffffffff1681526020018381526020016001151581526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815250600c8460405161125b919061355a565b9081526020016040518091039020600082015181600001908161127e9190613b4c565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff0219169083151502179055506101008201518160060160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600d60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915090816114129190613b4c565b505050505050565b60018160ff160361155e576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149e90613c6a565b60405180910390fd5b6007546114b3336116a2565b10156114f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114eb90613943565b60405180910390fd5b611501333060075461299e565b600754600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115529190613774565b9250508190555061169f565b60028160ff160361169e576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146115eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e290613c6a565b60405180910390fd5b6008546115f7336116a2565b1015611638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162f90613943565b60405180910390fd5b611645333060085461299e565b600854600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116969190613774565b925050819055505b5b50565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806002600684604051611700919061355a565b908152602001604051809103902060000160149054906101000a900460ff1660ff1603611838576000600a600060068660405161173d919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116000600b60006006876040516117c1919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541191509150611840565b600080915091505b915091565b61184d612bae565b600c8260405161185d919061355a565b908152602001604051809103902060405180610140016040529081600082018054611887906134ed565b80601f01602080910402602001604051908101604052809291908181526020018280546118b3906134ed565b80156119005780601f106118d557610100808354040283529160200191611900565b820191906000526020600020905b8154815290600101906020018083116118e357829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581526020016006820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a7957600080fd5b6001600683604051611a8b919061355a565b908152602001604051809103902060000160149054906101000a900460ff1660ff1603611b175780600683604051611ac3919061355a565b908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bf1565b3373ffffffffffffffffffffffffffffffffffffffff16600683604051611b3e919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b9057600080fd5b80600683604051611ba1919061355a565b908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff16600682604051611c1d919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c6f57600080fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611d735760405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600160ff16815250600682604051611cf5919061355a565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff160217905550905050611e2c565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600260ff16815250600682604051611db2919061355a565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff1602179055509050505b50565b60018054611e3c906134ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611e68906134ed565b8015611eb55780601f10611e8a57610100808354040283529160200191611eb5565b820191906000526020600020905b815481529060010190602001808311611e9857829003601f168201915b505050505081565b60075481565b600080600683604051611ed6919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600684604051611f18919061355a565b908152602001604051809103902060000160149054906101000a900460ff1691509150915091565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbb90613cd6565b60405180910390fd5b611fcf33848461299e565b6001905092915050565b60085481565b60018160ff16036120c8576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161203657600080fd5b6120803033600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299e565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556121ae565b60028160ff16036121ad576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161211f57600080fd5b6121693033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299e565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555b5b50565b3373ffffffffffffffffffffffffffffffffffffffff166006826040516121d8919061355a565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461222a57600080fd5b60068160405161223a919061355a565b9081526020016040518091039020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600c82604051612322919061355a565b908152602001604051809103902060060160009054906101000a900460ff169050919050565b600060018260ff16036123a0576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141590506123fb565b60028260ff16036123f6576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141590506123fb565b600090505b919050565b600080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361245157600090506128d3565b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561255e5783829060005260206000200180546124d1906134ed565b80601f01602080910402602001604051908101604052809291908181526020018280546124fd906134ed565b801561254a5780601f1061251f5761010080835404028352916020019161254a565b820191906000526020600020905b81548152906001019060200180831161252d57829003601f168201915b5050505050815260200190600101906124b2565b5050505090506000805b82518110156128cc57600c83828151811061258657612585613814565b5b602002602001015160405161259b919061355a565b908152602001604051809103902060060160019054906101000a900460ff166128b957600c8382815181106125d3576125d2613814565b5b60200260200101516040516125e8919061355a565b9081526020016040518091039020600201544210612752576000600c84838151811061261757612616613814565b5b602002602001015160405161262c919061355a565b908152602001604051809103902060030154600c85848151811061265357612652613814565b5b6020026020010151604051612668919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff1661269a919061369e565b905080600c8584815181106126b2576126b1613814565b5b60200260200101516040516126c7919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c86858151811061270457612703613814565b5b6020026020010151604051612719919061355a565b9081526020016040518091039020600501546127359190613701565b61273f9190613732565b8361274a9190613774565b9250506128b8565b6000600c84838151811061276957612768613814565b5b602002602001015160405161277e919061355a565b908152602001604051809103902060030154600960009054906101000a900463ffffffff1663ffffffff16600c8685815181106127be576127bd613814565b5b60200260200101516040516127d3919061355a565b908152602001604051809103902060010154426127f0919061369e565b6127fa9190613701565b612804919061369e565b905080600c85848151811061281c5761281b613814565b5b6020026020010151604051612831919061355a565b908152602001604051809103902060040160009054906101000a900463ffffffff1663ffffffff16600c86858151811061286e5761286d613814565b5b6020026020010151604051612883919061355a565b90815260200160405180910390206005015461289f9190613701565b6128a99190613732565b836128b49190613774565b9250505b5b80806128c490613843565b915050612568565b5080925050505b90565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161292257600080fd5b6001600682604051612934919061355a565b908152602001604051809103902060000160149054906101000a900460ff1660ff161461296057600080fd5b6002600682604051612972919061355a565b908152602001604051809103902060000160146101000a81548160ff021916908360ff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0490613d68565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a7390613dfa565b60405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612afa90613e8c565b60405180910390fd5b8181612b0f919061369e565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612ba19190613774565b9250508190555050505050565b60405180610140016040528060608152602001600081526020016000815260200160008152602001600063ffffffff16815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c71578082015181840152602081019050612c56565b60008484015250505050565b6000601f19601f8301169050919050565b6000612c9982612c37565b612ca38185612c42565b9350612cb3818560208601612c53565b612cbc81612c7d565b840191505092915050565b60006020820190508181036000830152612ce18184612c8e565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d2882612cfd565b9050919050565b612d3881612d1d565b8114612d4357600080fd5b50565b600081359050612d5581612d2f565b92915050565b6000819050919050565b612d6e81612d5b565b8114612d7957600080fd5b50565b600081359050612d8b81612d65565b92915050565b60008060408385031215612da857612da7612cf3565b5b6000612db685828601612d46565b9250506020612dc785828601612d7c565b9150509250929050565b60008115159050919050565b612de681612dd1565b82525050565b6000602082019050612e016000830184612ddd565b92915050565b612e1081612d5b565b82525050565b6000602082019050612e2b6000830184612e07565b92915050565b600060208284031215612e4757612e46612cf3565b5b6000612e5584828501612d46565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612ea682612c37565b612eb08185612e8a565b9350612ec0818560208601612c53565b612ec981612c7d565b840191505092915050565b6000612ee08383612e9b565b905092915050565b6000602082019050919050565b6000612f0082612e5e565b612f0a8185612e69565b935083602082028501612f1c85612e7a565b8060005b85811015612f585784840389528151612f398582612ed4565b9450612f4483612ee8565b925060208a01995050600181019050612f20565b50829750879550505050505092915050565b60006020820190508181036000830152612f848184612ef5565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612fce82612c7d565b810181811067ffffffffffffffff82111715612fed57612fec612f96565b5b80604052505050565b6000613000612ce9565b905061300c8282612fc5565b919050565b600067ffffffffffffffff82111561302c5761302b612f96565b5b61303582612c7d565b9050602081019050919050565b82818337600083830152505050565b600061306461305f84613011565b612ff6565b9050828152602081018484840111156130805761307f612f91565b5b61308b848285613042565b509392505050565b600082601f8301126130a8576130a7612f8c565b5b81356130b8848260208601613051565b91505092915050565b6000602082840312156130d7576130d6612cf3565b5b600082013567ffffffffffffffff8111156130f5576130f4612cf8565b5b61310184828501613093565b91505092915050565b600060ff82169050919050565b6131208161310a565b82525050565b600060208201905061313b6000830184613117565b92915050565b600063ffffffff82169050919050565b61315a81613141565b811461316557600080fd5b50565b60008135905061317781613151565b92915050565b600080600080600060a0868803121561319957613198612cf3565b5b600086013567ffffffffffffffff8111156131b7576131b6612cf8565b5b6131c388828901613093565b95505060206131d488828901613168565b945050604086013567ffffffffffffffff8111156131f5576131f4612cf8565b5b61320188828901613093565b935050606061321288828901612d7c565b925050608061322388828901612d46565b9150509295509295909350565b6132398161310a565b811461324457600080fd5b50565b60008135905061325681613230565b92915050565b60006020828403121561327257613271612cf3565b5b600061328084828501613247565b91505092915050565b600060408201905061329e6000830185612ddd565b6132ab6020830184612ddd565b9392505050565b6132bb81612d5b565b82525050565b6132ca81613141565b82525050565b6132d981612dd1565b82525050565b6132e881612d1d565b82525050565b600061014083016000830151848203600086015261330c8282612e9b565b915050602083015161332160208601826132b2565b50604083015161333460408601826132b2565b50606083015161334760608601826132b2565b50608083015161335a60808601826132c1565b5060a083015161336d60a08601826132b2565b5060c083015161338060c08601826132d0565b5060e083015161339360e08601826132d0565b506101008301516133a86101008601826132df565b506101208301516133bd6101208601826132df565b508091505092915050565b600060208201905081810360008301526133e281846132ee565b905092915050565b6000806040838503121561340157613400612cf3565b5b600083013567ffffffffffffffff81111561341f5761341e612cf8565b5b61342b85828601613093565b925050602061343c85828601612d46565b9150509250929050565b61344f81612d1d565b82525050565b600060408201905061346a6000830185613446565b6134776020830184613117565b9392505050565b6000806040838503121561349557613494612cf3565b5b60006134a385828601612d46565b92505060206134b485828601612d46565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061350557607f821691505b602082108103613518576135176134be565b5b50919050565b600081905092915050565b600061353482612c37565b61353e818561351e565b935061354e818560208601612c53565b80840191505092915050565b60006135668284613529565b915081905092915050565b7f546865206f7264657220686173206265656e2077697468647261776e00000000600082015250565b60006135a7601c83612c42565b91506135b282613571565b602082019050919050565b600060208201905081810360008301526135d68161359a565b9050919050565b7f506c6561736520636f6e6669726d207468652077616c6c65742061646472657360008201527f732c2043616e206e6f7420776974686472617700000000000000000000000000602082015250565b6000613639603383612c42565b9150613644826135dd565b604082019050919050565b600060208201905081810360008301526136688161362c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006136a982612d5b565b91506136b483612d5b565b92508282039050818111156136cc576136cb61366f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061370c82612d5b565b915061371783612d5b565b925082613727576137266136d2565b5b828204905092915050565b600061373d82612d5b565b915061374883612d5b565b925082820261375681612d5b565b9150828204841483151761376d5761376c61366f565b5b5092915050565b600061377f82612d5b565b915061378a83612d5b565b92508282019050808211156137a2576137a161366f565b5b92915050565b7f4e6f74206465706f736974730000000000000000000000000000000000000000600082015250565b60006137de600c83612c42565b91506137e9826137a8565b602082019050919050565b6000602082019050818103600083015261380d816137d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061384e82612d5b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138805761387f61366f565b5b600182019050919050565b7f416c726561647920706169640000000000000000000000000000000000000000600082015250565b60006138c1600c83612c42565b91506138cc8261388b565b602082019050919050565b600060208201905081810360008301526138f0816138b4565b9050919050565b7f4e6f7420656e6f75676820435344000000000000000000000000000000000000600082015250565b600061392d600e83612c42565b9150613938826138f7565b602082019050919050565b6000602082019050818103600083015261395c81613920565b9050919050565b600061396e82613141565b915061397983613141565b925082820261398781613141565b91508082146139995761399861366f565b5b5092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613a027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826139c5565b613a0c86836139c5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613a49613a44613a3f84612d5b565b613a24565b612d5b565b9050919050565b6000819050919050565b613a6383613a2e565b613a77613a6f82613a50565b8484546139d2565b825550505050565b600090565b613a8c613a7f565b613a97818484613a5a565b505050565b5b81811015613abb57613ab0600082613a84565b600181019050613a9d565b5050565b601f821115613b0057613ad1816139a0565b613ada846139b5565b81016020851015613ae9578190505b613afd613af5856139b5565b830182613a9c565b50505b505050565b600082821c905092915050565b6000613b2360001984600802613b05565b1980831691505092915050565b6000613b3c8383613b12565b9150826002028217905092915050565b613b5582612c37565b67ffffffffffffffff811115613b6e57613b6d612f96565b5b613b7882546134ed565b613b83828285613abf565b600060209050601f831160018114613bb65760008415613ba4578287015190505b613bae8582613b30565b865550613c16565b601f198416613bc4866139a0565b60005b82811015613bec57848901518255600182019150602085019450602081019050613bc7565b86831015613c095784890151613c05601f891682613b12565b8355505b6001600288020188555050505b505050505050565b7f416c7265616479207374616b6564000000000000000000000000000000000000600082015250565b6000613c54600e83612c42565b9150613c5f82613c1e565b602082019050919050565b60006020820190508181036000830152613c8381613c47565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000613cc0601183612c42565b9150613ccb82613c8a565b602082019050919050565b60006020820190508181036000830152613cef81613cb3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613d52602583612c42565b9150613d5d82613cf6565b604082019050919050565b60006020820190508181036000830152613d8181613d45565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613de4602383612c42565b9150613def82613d88565b604082019050919050565b60006020820190508181036000830152613e1381613dd7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613e76602683612c42565b9150613e8182613e1a565b604082019050919050565b60006020820190508181036000830152613ea581613e69565b905091905056fea2646970667358221220d44d5a033a1dcef4178bef743ecb289ceb3c0f573f06e312c5cf0a4eb95b08f264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1062,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 1065,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 1067,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1070,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "decimals",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 1074,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1080,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "allowances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 35,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "userWallets",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_string_memory_ptr,t_struct(userWallet)9_storage)"
      },
      {
        "astId": 37,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_fullnodeDepositAmount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 39,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_privoderDepositAmount",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 41,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_durationUnit",
        "offset": 0,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 45,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_fullnodeDeposits",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 49,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_privoderDeposits",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 54,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_orders",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Order)30_storage)"
      },
      {
        "astId": 59,
        "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
        "label": "_privoderOrders",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Order)30_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CloudSlitDao.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)30_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(userWallet)9_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CloudSlitDao.userWallet)",
        "numberOfBytes": "32",
        "value": "t_struct(userWallet)9_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Order)30_storage": {
        "encoding": "inplace",
        "label": "struct CloudSlitDao.Order",
        "members": [
          {
            "astId": 11,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "startTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "endTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "withdrawDuration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "duration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint32"
          },
          {
            "astId": 21,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "price",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "used",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 25,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "withdraw",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 27,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "payAddress",
            "offset": 2,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 29,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "privoderAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(userWallet)9_storage": {
        "encoding": "inplace",
        "label": "struct CloudSlitDao.userWallet",
        "members": [
          {
            "astId": 6,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8,
            "contract": "contracts/CloudSlitDao.sol:CloudSlitDao",
            "label": "status",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}